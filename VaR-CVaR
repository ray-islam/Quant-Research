"""
Author: Ray Islam
Description: General Python script to calculate Value at Risk (VaR) and Conditional Value at Risk (CVaR)
"""

import numpy as np

def calculate_var_cvar(returns, confidence_level=0.95):
    """
    Calculate Value at Risk (VaR) and Conditional Value at Risk (CVaR).
    
    Parameters:
    -----------
    returns : array-like
        Portfolio returns (can be daily, weekly, etc.).
    confidence_level : float
        Confidence level for VaR/CVaR (e.g., 0.95 for 95%).
        
    Returns:
    --------
    var : float
        Value at Risk at the given confidence level.
    cvar : float
        Conditional Value at Risk (Expected Shortfall).
    """
    
    # Convert to numpy array
    returns = np.array(returns)
    
    # Calculate the percentile for VaR
    var = np.percentile(returns, (1 - confidence_level) * 100)
    
    # Calculate CVaR: average of losses beyond VaR
    cvar = returns[returns <= var].mean()
    
    return var, cvar

# Example usage
if __name__ == "__main__":
    # Simulated daily returns (negative = loss)
    np.random.seed(42)
    simulated_returns = np.random.normal(loc=0.001, scale=0.02, size=1000)  # mean 0.1% daily return, 2% volatility

    var_95, cvar_95 = calculate_var_cvar(simulated_returns, confidence_level=0.95)
    
    print(f"95% VaR: {var_95:.4f}")
    print(f"95% CVaR: {cvar_95:.4f}") 
