import numpy as np
from scipy.stats import norm

def calculate_greeks(S, K, T, r, sigma, option_type="call"):
    """
    Calculate option Greeks: Delta, Gamma, Theta, Vega, and optionally Rho.
    
    Parameters:
    S : float : Current stock price
    K : float : Strike price
    T : float : Time to maturity (in years)
    r : float : Risk-free interest rate (annualized)
    sigma : float : Volatility of the underlying stock (annualized)
    option_type : str : "call" for call option, "put" for put option
    
    Returns:
    dict : A dictionary containing Delta, Gamma, Theta, and Vega
    """
    # Calculate d1 and d2
    d1 = (np.log(S / K) + (r + (sigma ** 2) / 2) * T) / (sigma * np.sqrt(T))
    d2 = d1 - sigma * np.sqrt(T)

    # Common calculations
    pdf_d1 = norm.pdf(d1)  # Probability density function
    cdf_d1 = norm.cdf(d1)  # Cumulative density function for d1
    cdf_neg_d1 = norm.cdf(-d1)
    
    # Delta
    if option_type == "call":
        delta = cdf_d1
    elif option_type == "put":
        delta = cdf_d1 - 1
    else:
        raise ValueError("Invalid option type. Choose 'call' or 'put'.")

    # Gamma
    gamma = pdf_d1 / (S * sigma * np.sqrt(T))

    # Theta
    if option_type == "call":
        theta = (-S * pdf_d1 * sigma / (2 * np.sqrt(T))
                 - r * K * np.exp(-r * T) * norm.cdf(d2))
    elif option_type == "put":
        theta = (-S * pdf_d1 * sigma / (2 * np.sqrt(T))
                 + r * K * np.exp(-r * T) * norm.cdf(-d2))

    # Vega
    vega = S * pdf_d1 * np.sqrt(T)

    # Return the Greeks
    return {
        "Delta": delta,
        "Gamma": gamma,
        "Theta": theta / 365,  # Per-day Theta
        "Vega": vega / 100    # Vega scaled for 1% change in volatility
    }

# Example usage:
S = 100    # Current stock price
K = 105    # Strike price
T = 1      # Time to maturity (1 year)
r = 0.05   # Risk-free rate (5%)
sigma = 0.2 # Volatility (20%)

# Call option Greeks
call_greeks = calculate_greeks(S, K, T, r, sigma, option_type="call")
print("Call Option Greeks:")
for greek, value in call_greeks.items():
    print(f"{greek}: {value:.4f}")

# Put option Greeks
put_greeks = calculate_greeks(S, K, T, r, sigma, option_type="put")
print("\nPut Option Greeks:")
for greek, value in put_greeks.items():
    print(f"{greek}: {value:.4f}")
